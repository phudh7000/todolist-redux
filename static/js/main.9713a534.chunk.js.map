{"version":3,"sources":["constants/actionTypes.js","components/item.js","actions/index.js","components/addItem.js","components/itemList.js","reducers/item.js","reducers/index.js","App.js","index.js"],"names":["ADD_ITEM","TOGGLE_PICK","DELETE_ITEM","item","props","handleDelete","bind","handlePick","this","delete","id","e","target","checked","status","className","type","defaultChecked","onChange","name","onClick","Component","connect","dispatch","index","types","actions","addItem","handleChange","setState","data","value","addTask","console","log","state","document","getElementById","focus","placeholder","obj","Items","listItem","items","map","initialState","myReducers","action","push","splice","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9713a534.chunk.js","sourcesContent":["export const ADD_ITEM = \"ADD_ITEM\";\r\nexport const toggleStatus = \"toggleStatus\";\r\nexport const TOGGLE_PICK ='TOGGLE_PICK';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';","import { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../actions'\r\nclass item extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handlePick = this.handlePick.bind(this);\r\n    }\r\n\r\n    handleDelete() {\r\n        this.props.delete(this.props.id);\r\n    }\r\n    handlePick(e) {\r\n        var { id } = this.props;\r\n        this.props.handlePick(e.target.checked, id)\r\n    }\r\n\r\n    render() {\r\n        var { item } = this.props\r\n        let input = item.status === true ? \r\n            <input type=\"checkbox\" defaultChecked className=\"item-pick\" onChange={this.handlePick} /> : <input type=\"checkbox\" className=\"item-pick\" onChange={this.handlePick} />\r\n        return (\r\n            <div className=\"item\">\r\n                {/* {input} */}\r\n                <input type=\"checkbox\" defaultChecked = {item.status} className=\"item-pick\" onChange={this.handlePick} />\r\n                <div className={item.status === true ? 'item-text true' : 'item-text false'}>\r\n                    <p>{item.name}</p>\r\n                </div>\r\n                <button className=\"btn-delete\" onClick={this.handleDelete}>x</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch,props)=>{\r\n    return{\r\n        handlePick: (status,index)=>{\r\n            dispatch(actions.handlePick(status,index));\r\n        },\r\n        delete: (index)=>{\r\n            dispatch(actions.deleteItem(index));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(item);","import * as types from '../constants/actionTypes'\r\n\r\n\r\nexport const status = ()=>{\r\n    return {\r\n        type: types.toggleStatus\r\n    }\r\n}\r\n\r\nexport function addItem(obj){\r\n    return {\r\n        type: types.ADD_ITEM,\r\n        name: obj,\r\n        status: true\r\n    }\r\n}\r\n\r\nexport function handlePick(status, index){\r\n    return{\r\n        type: types.TOGGLE_PICK,\r\n        status,\r\n        index\r\n    }\r\n}\r\n\r\nexport function deleteItem(index){\r\n    return{\r\n        type: types.DELETE_ITEM,\r\n        index\r\n    }\r\n}","import {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../actions'\r\n\r\nclass addItem extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            data:\"\"\r\n        }\r\n    }\r\n    handleChange =(e)=>{\r\n        this.setState(\r\n            {\r\n                data: e.target.value\r\n            }\r\n        ) \r\n    }\r\n\r\n    addTask=()=>{\r\n        console.log('hihi')\r\n        if(this.state.data==='')return false;\r\n        // this.props.addTask(this.state.data);  \r\n        this.setState({\r\n            data:''\r\n        })\r\n        // console.log(this.state.data)\r\n        this.props.addTask(this.state.data);\r\n        document.getElementById('input-text').focus();\r\n    }\r\n\r\n    render(){\r\n        // console.log(this.props)\r\n\r\n        return(\r\n            <div className=\"addItem\">\r\n                <input type='text' placeholder=\"Full Name\" onChange = {this.handleChange} value={this.state.data} id=\"input-text\"></input>\r\n                <button type='submit' className=\"btn-add\" onClick = {this.addTask}>ADD</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        // state: state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props)=>{\r\n    return{\r\n        addTask: (obj)=>{\r\n            dispatch(actions.addItem(obj))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(addItem);","import { Component } from 'react';\r\nimport Item from './item';\r\nimport AddItem from './addItem'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nclass Items extends Component {\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        var listItem = this.props.items.map((item, index) => {\r\n            return <Item key={index} id={index} item = {item} />\r\n        })\r\n        return (\r\n            <div className=\"itemList\">\r\n                <div className=\"\">\r\n                    <AddItem></AddItem>\r\n                </div>\r\n                <div className=\"list\">\r\n                    {listItem}\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return {\r\n        items: state.items\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(Items);","import * as types from '../constants/actionTypes'\r\nvar initialState = [{\r\n    name: 'Duong Hoang',\r\n    status: true\r\n},\r\n{\r\n    name: 'Duong Manh',\r\n    status: true\r\n}, {\r\n    name: 'Hoang Anh',\r\n    status: false\r\n}];\r\n\r\nvar myReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.ADD_ITEM:\r\n            console.log('action')\r\n            var { name } = action;\r\n            state.push({ name, status: true });\r\n            return [...state]\r\n        case types.TOGGLE_PICK:\r\n            var { index, status } = action;\r\n            state[index].status = status;\r\n            // console.log(state);\r\n            return [...state];\r\n\r\n        case types.DELETE_ITEM:\r\n            state.splice(action.index,1);\r\n            return [...state]\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default myReducers;\r\n","import {combineReducers, createStore} from 'redux';\r\nimport items from './item';\r\nvar myReducers = combineReducers({\r\n    items,\r\n})\r\n\r\n\r\nlet store = createStore(myReducers,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import { Component } from 'react'\nimport ItemList from './components/itemList'\nimport './App.css'\nimport store from './reducers/index';\nimport {Provider} from 'react-redux'\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store = {store}>\n      <div className=\"container\">\n        <h1>TO DO LIST</h1>\n        <ItemList />\n      </div>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}